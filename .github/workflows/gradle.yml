# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "master" ]
  pull_request: # 없어도 됨 (누군가가 해당 레파지토리에서 pull하면 자동배포 되는거임)
    branches: [ "master" ]

permissions:
  contents: read

env:
  S3_BUCKET_NAME: be-58-wish9

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
    - name: Add permission # '~/gradlew' is not executable. 에러 때문에 추가
      run: chmod +x gradlew # '~/gradlew' is not executable. 에러 때문에 추가
    - name: Build with Gradle
      uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
      with:
        arguments: build

      # build한 후 프로젝트를 압축
    - name: Make zip file
      run: zip -r ./practice-deploy.zip .
      shell: bash

      # Access Key와 Secret Access Key를 통해 권한을 확인
      # Access Key와 Secret Key는 직접 작성 X (깃 설정에서 추가)
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }} # 등록한 Github Secret이 자동으로 불려와진다.
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} # 등록한 Github Secret이 자동으로 불려와진다.
        aws-region: ap-northeast-2

#    - name: Retrieve password from AWS Parameter Store # db에 comment 남기는 용으로 rds 연결하려고 사용
#      run: |
#        PASSWORD=$(aws ssm get-parameter --name "/spring-boot-aws/be-58-wish9/spring.datasource.password" --with-decryption --query "Parameter.Value" --output text)
#        echo "DB_PASSWORD=$PASSWORD" >> $GITHUB_ENV

      # 압축한 프로젝트를 S3로 전송
    - name: Upload to S3
      run: aws s3 cp --region ap-northeast-2 ./practice-deploy.zip s3://$S3_BUCKET_NAME/practice-deploy.zip

      # CodeDeploy에게 배포 명령
    - name: Code Deploy
      run: >
        aws deploy create-deployment --application-name be-58-wish9
        --deployment-config-name CodeDeployDefault.AllAtOnce
        --deployment-group-name be-58-wish9-group
        --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=practice-deploy.zip